language: python

branches:
  except:
    - /^appveyor-.*$/

# Defaults for jobs.
os: linux
dist: trusty
services: docker

before_install:
  # Update to the latest version of docker.
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - sudo apt-get update
  - sudo apt-get -y install docker-ce

  # Launch SQL Server
  - make start-sqlserver

script: make ${CTDS_MAKE_TARGET}

after_script:
  - make stop-sqlserver

after_success:
  - bash <(curl -s https://codecov.io/bash)

# On failure, try dumping the SQL server logs to aid in debugging.
after_failure:
  - docker logs ctds-unittest-sqlserver

# Define jobs via environment variables to expose more job detail
# in the Travis UI.
env:
  jobs:
    - CTDS_MAKE_TARGET: check_3.8
    - CTDS_MAKE_TARGET: check_3.7
    - CTDS_MAKE_TARGET: check_3.6
    - CTDS_MAKE_TARGET: check_2.7
    # Minimal tests against deprecated python versions
    - CTDS_MAKE_TARGET: test_3.5
    - CTDS_MAKE_TARGET: test_3.4
    - CTDS_MAKE_TARGET: test_3.3
    - CTDS_MAKE_TARGET: valgrind_3.6.3
    - CTDS_MAKE_TARGET: valgrind_2.7.14
    - CTDS_MAKE_TARGET: pylint

jobs:
  fast_finish: true
  include:
    # Docker isn't supported on OS X. Just attempt to install ctds as a check that
    # all code compiles using OS X's toolchain.
    - os: osx
      language: shell
      stage: test
      addons:
        homebrew:
          packages:
            - freetds
          update: true
      env: []
      services: []
      before_install:
        - python3 -m venv ctds-venv
        - source ctds-venv/bin/activate
      script:
        - CTDS_STRICT=1 pip3 install -v .
      after_script: skip
      after_success: true
      after_failure: skip

    - stage: publish egg and documentation
      deploy:
        - provider: pypi
          username: "__token__"
          password:
            # pypi.org token
            secure: "QlermU4+5sbZsiCWXxCCD3qgOqH2nu72cvDcHBOf7hPzsSLsJsA7kYK/GDTVxCSAvr43lyzvjp1Gi00K8JyRZY6SLsh//MpC8IAVa8VLrL+bykxfXUv13onFMegnS1/w7y3tyUPsC9Ph7zcTFuPkN4ewHfem1fOEZtryHSbs9kFc0V8jwG1eSWCZNCg0s1HX1FlCj8NSp7AlXQny+5a9bWhs1m6g5aNVHvZkSZo8KCydeZuvs/v+Pi/Vm3MDgOuj7WsG5OdzPJRQHgkO+g78ftDeeZmD1o/Fm97X4Lj/r93+wPtowswcYm6xJXKkkBSNtfL9e2yCceacTeLh6IVT9XyfZ8Hbp20dkCAjyGg6KumgQz7+sBp7Rh0EtVtOQ+tIq7qElo+W6ae/8pgw8q/cIrjaoy1jqthkIN6fbWJ742ovfm/IWYd/E2n9M95aWpNtmKAwiRMCb2OGhpLQZ+//h2PFEYtUMXzX2MMp8yDjM41m1OE9gKVsy3lYVxu1WCO4kWjQPKNX/wZYFQG7L3LBwmcq200jFybyCQW7bz688nd64ELhLkzVfb5s+aj8s6yj8A6xn4mFSF9Tmm8kCpvBgfdDikSScmqwyVmlxiBwZ55u4xe7lVhOO0CT3lYmlulS43GE0hDiT1dHcl7gzrsvlwN72CnrMVpU5IVX+UPNbiw="

            # test.pypi.org token
            #secure: "NyvY/h3yc9OIcPaTEkpFPmuEboy+Jqvqbf0Vla++STiBeGzRctDqwDfUxkWIPOCgMKbCfHj6cpE4L/IJIwiqp/UMRLbnymqoWaivza5+QqClxg8RAPtcO8OkGiP3kr8jX6Dag46m3D1LD+tAGXVnvwyN+adJ2psR4/ods8LQILWKmEquJD42JYUwPCl8itYyTudjEvlckdgqSGAjjowa3uBsQFqOoVOS8cVbHF+qMpgpAj0pr8tMTcRSnCoWyT1gMLY5NsbOCpwORdfI7m7TBH1aHGIyOyLvMATIa0I15e4wR0eLepO2FSJGYPsMksKJhTtAgNS7PBIb2aMzQ2ds349Dq0oXXH0OSwD9lNJydbDayl8tqOENBKVgaSLKiOOCIDpBHxzUIv5AOIY7NlpgsAC9BZD7d3VmE4GfSvx/9yho0tmKEutAUbMyuZJtYcQNViiP29m5mjHFobqBTkvBExrDm/ZCUs/iv8A233xHPOEGnPoFuSO2dxVn6KWp10ECyPuW5blBK3IuGl+muY+zUFeDit6hIFHPuJMbulCzrBwIZuN3SNQjCnD0D894vuSUosZDddeTKBrqwvihCXKFSlpp44MdbJWzta9SWY0AZqAZ/Pgae7T4HPDqm4vsXvIiHeFdxsSFGSmusdNZyOKC4Hn99Ad0aGbjZ59KFVp3MlM="
          skip_existing: true
          on:
            tags: true
        - provider: pages
          skip_cleanup: true
          github_token: $GITHUB_TOKEN
          keep_history: true
          local_dir: .gh-pages
          target_branch: gh-pages
          on:
            tags: true
      env: []
      services: []
      before_install: skip
      script: make doc
      after_script: skip
      # Don't use `skip` for after_success. It will skip the deploy job.
      after_success: true
      after_failure: skip
